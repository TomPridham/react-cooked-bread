{"version":3,"sources":["webpack:///./src/pages/extend.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"+NAMaA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,UADR,UAGA,sFACA,kBAAS,CACP,UAAa,eACZ,kCAAMC,WAAW,OAAU,CAC1B,UAAa,gBACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,mBADd,KAEc,kCAAMA,WAAW,QAAW,CACzC,UAAa,2BADA,iBAJhB,aAM0C,kCAAMA,WAAW,QAAW,CACnE,UAAa,mBAD0B,KAE1B,kCAAMA,WAAW,QAAW,CACzC,UAAa,sBADA,KAEA,kCAAMA,WAAW,QAAW,CACzC,UAAa,2BADA,oBAEe,kCAAMA,WAAW,QAAW,CACxD,UAAa,sBADe,KAZ/B,SAc0B,kCAAMA,WAAW,QAAW,CACnD,UAAa,mBADU,KAEV,kCAAMA,WAAW,QAAW,CACzC,UAAa,sBADA,KAEA,kCAAMA,WAAW,QAAW,CACzC,UAAa,2BADA,sBAEiB,kCAAMA,WAAW,QAAW,CAC1D,UAAa,sBADiB,KAEjB,kCAAMA,WAAW,QAAW,CACzC,UAAa,mBADA,KAtBhB,OA0BH,iBAAQ,CACN,GAAM,iBADR,iBAGA,yGACA,iBAAQ,CACN,GAAM,WADR,WAGA,+PACA,kBAAS,CACP,UAAa,iBACZ,kCAAMA,WAAW,OAAU,CAC1B,UAAa,kBACZ,kCAAMA,WAAW,QAAW,CAC3B,UAAa,mBADd,kCAFF,OAKH,kCAAMA,WAAW,QAAW,CACtB,UAAa,mBADnB,gDALG,SAQD,kCAAMA,WAAW,QAAW,CACxB,UAAa,mBADjB,oCARC,WAWC,kCAAMA,WAAW,QAAW,CAC1B,UAAa,mBADf,4CAXD,aAcG,kCAAMA,WAAW,QAAW,CAC5B,UAAa,mBADb,yCAdH,aAiBG,kCAAMA,WAAW,QAAW,CAC5B,UAAa,mBADb,oCAjBH,WAoBC,kCAAMA,WAAW,QAAW,CAC1B,UAAa,mBADf,uCApBD,WAuBC,kCAAMA,WAAW,QAAW,CAC1B,UAAa,mBADf,8CAvBD,QA+BPJ,EAAWK,gBAAiB","file":"component---src-pages-extend-mdx-a6a1305d76ed1d228100.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/react-cooked-bread/react-cooked-bread/packages/examples/src/components/layout.tsx\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"extend\"\n    }}>{`Extend`}</h1>\n    <p>{`Perhaps most commonly, you'll want to use your own component.`}</p>\n    <pre {...{\n      \"className\": \"language-js\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"token operator\"\n        }}>{`<`}</span><span parentName=\"code\" {...{\n          \"className\": \"token maybe-class-name\"\n        }}>{`ToastProvider`}</span>{` container`}<span parentName=\"code\" {...{\n          \"className\": \"token operator\"\n        }}>{`=`}</span><span parentName=\"code\" {...{\n          \"className\": \"token punctuation\"\n        }}>{`{`}</span><span parentName=\"code\" {...{\n          \"className\": \"token maybe-class-name\"\n        }}>{`MySpecialOverlay`}</span><span parentName=\"code\" {...{\n          \"className\": \"token punctuation\"\n        }}>{`}`}</span>{` toast`}<span parentName=\"code\" {...{\n          \"className\": \"token operator\"\n        }}>{`=`}</span><span parentName=\"code\" {...{\n          \"className\": \"token punctuation\"\n        }}>{`{`}</span><span parentName=\"code\" {...{\n          \"className\": \"token maybe-class-name\"\n        }}>{`MyCustomMessageBox`}</span><span parentName=\"code\" {...{\n          \"className\": \"token punctuation\"\n        }}>{`}`}</span><span parentName=\"code\" {...{\n          \"className\": \"token operator\"\n        }}>{`>`}</span>{`\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"custom-styles\"\n    }}>{`Custom styles`}</h3>\n    <p>{`You may also choose to use the default components and modify the default styles.`}</p>\n    <h4 {...{\n      \"id\": \"classes\"\n    }}>{`Classes`}</h4>\n    <p>{`There are only two components rendered to the DOM. The first is the container that holds all the toasts in an absolute position over the viewport. Next is the toast component which is made up of just a few elements. Here they are:`}</p>\n    <pre {...{\n      \"className\": \"language-sass\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"language-sass\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"token selector\"\n        }}>{`.react-cooked-bread__container`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"token selector\"\n        }}>{`.react-cooked-bread__toast__transition-group`}</span>{`\n    `}<span parentName=\"code\" {...{\n          \"className\": \"token selector\"\n        }}>{`.react-cooked-bread__toast__root`}</span>{`\n      `}<span parentName=\"code\" {...{\n          \"className\": \"token selector\"\n        }}>{`.react-cooked-bread__toast__icon-wrapper`}</span>{`\n        `}<span parentName=\"code\" {...{\n          \"className\": \"token selector\"\n        }}>{`.react-cooked-bread__toast__countdown`}</span>{`\n        `}<span parentName=\"code\" {...{\n          \"className\": \"token selector\"\n        }}>{`.react-cooked-bread__toast__icon`}</span>{`\n      `}<span parentName=\"code\" {...{\n          \"className\": \"token selector\"\n        }}>{`.react-cooked-bread__toast__content`}</span>{`\n      `}<span parentName=\"code\" {...{\n          \"className\": \"token selector\"\n        }}>{`.react-cooked-bread__toast__dismiss-button`}</span>{`\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}